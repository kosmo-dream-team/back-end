<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.springboot.mapper.ProjectMapper">

    <!--  
    카데고리 상세보기
    프로젝트 기부액 상위 값 10건 전달 :
    프로젝트명, 카테고리, 목표일, 마감일까지 남은 일수, 목표금액, 도달율
    -->
	<select id="findTop10ProjectsByDonation" resultType="com.edu.springboot.dto.ProjectSummaryDTO">
	    SELECT 
	      p.title 		      AS projectName,
	      p.category           AS category,
	      DATE_FORMAT(p.end_date, '%Y-%m-%d') AS goalDate,
	      DATEDIFF(p.end_date, NOW()) AS daysLeft,
	      p.target_amount      AS goalAmount,
	      CAST( (COALESCE(SUM(d.donation_amount), 0)/p.target_amount)*100 AS UNSIGNED ) AS donationRate
	    FROM project p
	    LEFT JOIN donation d 
	           ON p.project_id = d.project_id
	    GROUP BY p.project_id
	    ORDER BY SUM(d.donation_amount) DESC
	    LIMIT 10
	</select>

    <!--  
    캠페인(기부-상세보기)
    해당 프로젝트 값 전달 :
	프로젝트 명칭, 카데고리, 시작일, 마감일, 설명,
	마감일까지 남은 일수(예: D-16), 목표금액, 도달율(예: 33%)
	해당 프로젝트의 기부자    
    -->


    <!-- 1) 프로젝트 기본 정보 조회 + donation 합계, 기부자 수, 프로젝트 이미지 -->
    <select id="findProjectDetail" resultType="com.edu.springboot.dto.ProjectDetailDTO">
        SELECT 
            p.project_id                         AS projectId,
            p.title                              AS title,
            p.category                           AS category,
            DATE_FORMAT(p.start_date, '%Y-%m-%d') AS startDate,
            DATE_FORMAT(p.end_date, '%Y-%m-%d')   AS endDate,
            p.description                        AS description,
            DATEDIFF(p.end_date, NOW())            AS daysLeft,
            p.target_amount                      AS targetAmount,
            CAST(( COALESCE(SUM(d.donation_amount), 0) / p.target_amount ) * 100 AS UNSIGNED) AS donationRate,
            COUNT(DISTINCT d.user_id)            AS donorCount,
            COALESCE(SUM(d.donation_amount), 0)    AS accumulatedDonation,
            p.project_image                      AS projectImage
        FROM project p
        LEFT JOIN donation d ON p.project_id = d.project_id
        WHERE p.project_id = #{projectId}
        GROUP BY p.project_id
    </select>

    <!-- 2) 해당 프로젝트 기부자 목록 (user.username) -->
    <select id="findDonorsByProjectId" resultType="String">
        SELECT u.username
          FROM donation dn
          JOIN user u ON dn.user_id = u.user_id
         WHERE dn.project_id = #{projectId}
         GROUP BY u.username
         ORDER BY MAX(dn.donation_date) DESC
    </select>

    <!-- 3) 기부 INSERT -->
    <insert id="insertDonation">
        INSERT INTO donation (
          user_id, project_id, donation_amount, donation_date, payment_method, status
        ) VALUES (
          #{userId}, #{projectId}, #{amount}, NOW(), #{paymentMethod}, 'success'
        )
    </insert>

    <!-- 4) 최근 신설된 프로젝트 3개 정보 조회 쿼리 -->
    <select id="findLatest3Projects" resultType="com.edu.springboot.dto.RecentProjectDTO">
        SELECT 
            p.project_id      AS projectId,
            p.title           AS title,
            p.category        AS category,
            p.user_id         AS userId,
            p.target_amount   AS targetAmount,
            p.description     AS description,
            COALESCE(SUM(d.donation_amount), 0) AS donationSum
        FROM project p
        LEFT JOIN donation d ON p.project_id = d.project_id
        GROUP BY p.project_id
        ORDER BY p.project_id DESC
        LIMIT 3
    </select>
    

</mapper>
